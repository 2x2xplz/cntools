/* non-minimized version at /regex/default.js, enjoy! */
"use strict";var REXP={data:{input:"reInput",exp:"reExp",outLabel:"reOutLabel",output:"reOutput",replace:"reReplacement",literal:"reLiteral",update:"cmdUpdate",clear:"cmdClear",repCont:"replaceContainer"},options:{global:"optGlobal",ignoreCase:"optIgnoreCase",multiLine:"optMultiLine",truncate:"optTrunc",update:"optUpdate",execute:"optExecute",explain:"optExplain",replace:"optReplace",repFunc:"optReplaceFunction"},init:function(){function a(c){for(var b in c){if(c.hasOwnProperty(b)&&typeof c[b]==="string"){c[b]=document.getElementById(c[b]);
}}}a(this.data);a(this.options);Event.addListener([this.data.input,this.data.exp,this.data.replace],"keyup",this.do_keyup,this,true);Event.addListener(this.data.clear,"click",this.do_clear,this,true);
Event.addListener([this.data.update,this.options.global,this.options.ignoreCase,this.options.multiLine,this.options.execute,this.options.explain,this.options.replace,this.options.repFunc],"click",this.do_update,this,true);
},do_clear:function(){this.data.input.value="";this.data.exp.value="";this.data.input.focus();this.do_update();},process:function(g,c,h,a,e){var f=null,b={literal:"",body:""};
try{f=new RegExp(h,a);}catch(d){b.literal='<span class="ERR">Invalid</span>';b.body=this.render.error(d);return b;}b.literal=this.render.literal(f);b.body=(g==="execute")?this.render.execute(c,f):(g==="explain")?this.render.explain(f):(g==="repFunc")?this.render.repFunc(c,f,e):this.render.replace(c,f,e);
return b;},do_keyup:function(){if(this.options.update.checked===false){return;}this.do_update();},do_update:function(){var i=this.data.input.value,e=this.data.exp.value,b=this.data.replace.value,a=(this.options.global.checked)?"g":"",h=(this.options.ignoreCase.checked)?"i":"",g=(this.options.multiLine.checked)?"m":"",d=a+h+g,f=(this.options.execute.checked)?"execute":(this.options.explain.checked)?"explain":(this.options.repFunc.checked)?"repFunc":"replace",c=this.process(f,i,e,d,b);
this.data.repCont.style.display=(f==="replace"||f==="repFunc")?"block":"none";this.data.literal.innerHTML=c.literal;this.data.output.innerHTML=c.body;},render:{lastFN:null,html:function(a){return a.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},string:function(a){if(a===null){return'<span class="NULL">null</span>';}if(a===undefined){return'<span class="UNDEF">undefined</span>';}if(a.length===0){return'<span class="EMPTY">[zero-length string]</span>';
}if(/^\s+$/.test(a)===true){return'<span class="EMPTY">[string of all white space]</span>';}if(REXP.options.truncate.checked&&a.length>70){a=a.substring(0,70)+"\u2026";
}return'<span class="STRING">'+this.html(a)+"</span>";},error:function(a){return'<p class="ERR">'+this.html(a.message)+"</p>";},literal:function(b){var a="/"+this.html(b.source)+"/";
if(b.global){a+="g";}if(b.ignoreCase){a+="i";}if(b.multiline){a+="m";}return a;},execute:function(b,e){var c,f,d=50,a="";if(b.length===0){a+='<p class="EMPTY">[ zero-length input ]</p>';
}if(e.source.length===0){a+='<p class="EMPTY">[ zero-length regular expression ]</p>';}if(e.test(b)===false){a+='<p class="EMPTY">[ No Matches ]</p>';}if(a.length!==0){return a;
}if(e.global){e.lastIndex=0;f=[];while((c=e.exec(b))!==null&&f.length<d){f.push(c);}return(f.length>=d&&c!==null)?this.matches(f,true):this.matches(f,false);}c=e.exec(b);
return this.match(c);},matches:function(d,c){var a,e,b;b='<table class="OBJ"><caption><span class="NUM">'+d.length;b+=(c)?"+</span> match":"</span> match";b+=(d.length===1)?"":"es";
if(c){b+=' (showing first <span class="NUM">'+d.length+"</span> matches)";}b+="</caption><thead><tr><th>Num</th><th>Index</th><th>Match</th>";for(a=1;a<d[0].length;
a++){b+='<th class="NUM">'+a+"</th>";}b+="</tr></thead><tbody>";for(a=0;a<d.length;a++){b+='<tr><th class="NUM">'+a+'</th><th class="NUM">'+d[a].index+"</th><th>"+this.string(d[a][0])+"</th>";
for(e=1;e<d[a].length;e++){b+="<td>"+this.string(d[a][e])+"</td>";}b+="</tr>";}b+="</tbody></table>";return b;},match:function(c){var a,b='<table class="OBJ"><caption>Match at character <span class="NUM">'+c.index+'</span></caption><thead><tr><th>Num</th><th>Match</th></thead><tbody><tr><th class="NUM">0</th><td>'+this.string(c[0])+"</td></tr>";
for(a=1;a<c.length;a++){b+='<tr><th class="NUM">'+a+"</th><td>"+this.string(c[a])+"</td></tr>";}b+="</tbody></table>";return b;},explain:function(d){var f=REXP_JS.tokenize(d.source),a=this.html,c=true;
function e(h){var g,i=h.length;for(g=0;g<h.length;g++){if(h[g].hasOwnProperty("tokens")){i+=e(h[g].tokens);}}return i;}function b(j){var g,i=e(j),h='<table><caption><span class="NUM">'+i+"</span> token";
if(i!==1){h+="s";}h+="</caption>";if(c){h+="<thead><tr><th>Token</th><th>Meaning</th></tr></thead>";c=false;}h+="<tbody>";for(g=0;g<j.length;g++){h+="<tr><th>"+a(j[g].id)+"</th><td>"+j[g].meaning+"</td></tr>";
if(j[g].hasOwnProperty("tokens")){h+='<tr><td colspan="2" class="SUB">'+b(j[g].tokens)+"</td></tr>";}}if(j.length===0){h+='<tr><th colspan="2" class="EMPTY">[ Empty ]</th></tr>';
}return h+"</tbody></table>";}return b(f);},replace:function(a,c,b){c.lastIndex=0;return this.string(a.replace(c,b));},repFunc:function(input,re,replace){try{REXP.render.lastFN=null;
eval("REXP.render.lastFN = ("+replace+");");}catch(ex){return'<p class="ERR">Could not parse replacement function.</p>'+this.error(ex);}if(typeof REXP.render.lastFN!=="function"){return'<p class="ERR">Replacement is of type "'+(typeof REXP.render.lastFN)+'", expected type "function"</p>';
}var output;try{output=this.replace(input,re,REXP.render.lastFN);}catch(ex2){return'<p class="ERR">Error in replacement function.</p>'+this.error(ex2);}return output;
}}};var REXP_JS={charcode:{"00":"Null","01":"Start of heading","02":"Start of text","03":"End of text","04":"End of transmission","05":"Enquiry","06":"Acknowledge","07":"Bell","08":"Backspace","09":"Tab (\\t)","0A":"Line feed","0B":"Vertical tab","0C":"Form feed","0D":"Carriage return","0E":"Shift out","0F":"Shift in","10":"Data link escape","11":"Device control one","12":"Device control two","13":"Device control three","14":"Device control four","15":"Negative acknowledge","16":"Synchronous idle","17":"End of transmission block","18":"Cancel","19":"End of medium","1A":"Substitute","1B":"Escape","1C":"File separator","1D":"Group separator","1E":"Record separator","1F":"Unit separator","20":"Space","21":"Exclamation mark: !","22":'Quotation mark: "',"23":"Number sign: #","24":"Dollar sign: $","25":"Percent sign: %","26":"Ampersand: &","27":"Apostrophe: '","28":"Left parenthesis: (","29":"Right parenthesis: )","2A":"Asterisk: *","2B":"Plus sign: +","2C":"Comma: ,","2D":"Hyphen: -","2E":"Period: .","2F":"Solidus: /","3F":"Question mark: ?","5B":"Left square bracket: [","5C":"Backslash: \\","5D":"Right square bracket: ]","7B":"Left curly bracket: {","7D":"Right curly bracket: }","7F":"Delete",A0:"Non-breaking space"},unicode:{"2000":"EN Quad","2001":"EM Quad","2002":"EN Space","2003":"EM Space","2004":"Three-Per-EM Space","2005":"Four-Per-EM Space","2006":"Size-Per-EM Space","2007":"Figure Space","2008":"Punctuation Space","2009":"Thin space","200A":"Hair space","200B":"Zero-width space","200C":"Zero-width non-joiner","200D":"Zero-width joiner","200E":"Left-To-Right mark","200F":"Right-To-Left mark","2010":"Hyphen","2028":"Line separator","2029":"Paragraph separator","3000":"Ideographic space"},initialized:false,init:function(){if(this.initialized===true){return;
}for(var a in this.charcode){if(this.charcode.hasOwnProperty(a)){this.unicode["00"+a]=this.charcode[a];}}},tokenizeCharacterClass:function(c,b){var k=0,i=[],d={"\\n":"New line","\\d":"Any digit","\\D":"Any non-digit","\\b":"Backspace","\\f":"Form feed","\\r":"Carriage return","\\s":"White space","\\S":"Non-white space","\\t":"Tab","\\v":"Vertical tab","\\w":"Any alphanumeric character","\\W":"Any non-alphanumeric character","\\0":"NUL"};
function m(){var p=c.charAt(k),o=(p===" ")?'<i class="EMPTY">[space]</i>':(p==="\t")?'<i class="EMPTY">[tab]</i>':(p==="\n")?'<i class="EMPTY">[newline]</i>':(p==="\u00A0")?'<i class="EMPTY">[non-breaking space]</i>':REXP.render.html(p);
i.push({id:p,meaning:o,literal:true});k++;}function n(){var p=c.substring(k,k+3),o=/\\c[A-Z]/.exec(p);if(o===null){k++;m();i[i.length-1].id="\\c";return;}i.push({id:o[0],meaning:(b)?"Not control character "+p.substring(2):"Control character "+p.substring(2)});
k+=3;}function f(){var p=/^\\x([0-9A-Fa-f]{2})/.exec(c.substring(k)),q,o;if(p===null){k++;m();i[i.length-1].id="\\x";return;}q=p[1].toUpperCase();o=(b)?"Not c":"C";
o+=(REXP_JS.charcode.hasOwnProperty(q))?'haracter code <i class="HEX">'+q+'</i> (<i class="LITERAL">'+REXP.render.html(REXP_JS.charcode[q])+"</i>).":'haracter code <i class="HEX">'+q+"</i>.";
i.push({id:p[0],meaning:o});k+=p[0].length;}function h(){var p=/^\\u([0-9A-Fa-f]{4})/.exec(c.substring(k)),q,o;if(p===null){k++;m();i[i.length-1].id="\\u";return;
}q=p[1].toUpperCase();o=(b)?"Not u":"U";o+=(REXP_JS.unicode.hasOwnProperty(q))?'nicode character <i class="HEX">'+q+'</i> (<i class="LITERAL">'+REXP.render.html(REXP_JS.unicode[q])+"</i>).":'nicode character <i class="HEX">'+q+"</i>.";
i.push({id:p[0],meaning:o});k+=p[0].length;}function a(){var o=c.substring(k,k+2);if(d.hasOwnProperty(o)){i.push({id:o,meaning:d[o]});k+=2;return;}switch(o){case"\\c":n();
break;case"\\x":f();break;case"\\u":h();break;default:k++;m();i[i.length-1].id=o;break;}}function j(){if(k>0&&k+1<c.length){i.push("range");k++;}else{m();}}function e(){var o;
while(k<c.length){o=c.charAt(k);switch(o){case"\\":a();break;case"-":j();break;default:m();break;}}}function g(){var o=i.length;while(o--){if(i[o]==="range"){i[o-1].meaning=(b)?'Match any characters other than those between [<i class="LITERAL">'+i[o-1].meaning+'</i>] and [<i class="LITERAL">'+i[o-1].meaning+"</i>].":'Match any characters between [<i class="LITERAL">'+i[o-1].meaning+'</i>] and [<i class="LITERAL">'+i[o+1].meaning+"</i>].";
i[o-1].id+="-"+i[o+1].id;i[o-1].literal=false;i.splice(o,2);}}}function l(){var o,q,p=[i[0]];p[0].total=1;for(o=1,q=1;o<i.length;o++){if(i[o].literal===true&&p[q-1].literal===true){p[q-1].id+=i[o].id;
p[q-1].meaning+=i[o].meaning;p[q-1].total++;}else{p[q]=i[o];p[q].total=1;q++;}}for(o=0;o<p.length;o++){if(p[o].literal===true&&p[o].total>1){p[o].meaning=(b)?'Match any characters other than these characters: [<i class="LITERAL">'+p[o].meaning+"</i>].":'Match any of these characters: [<i class="LITERAL">'+p[o].meaning+"</i>].";
}}return p;}e();g();return(i.length>1)?l():i;},tokenize:function(b){var m=0,l=[],c={"|":"Or",".":"Matches any single character except newline characters.","\\b":"Matches a word boundary, such as a space.","\\B":"Matches a non-word boundary.","\\f":"Matches a form feed (whatever that is).","\\n":"Matches a linefeed.","\\r":"Matches a carriage return.","\\s":"Matches a single white space character.","\\S":"Matches a single character other than white space.","\\t":"Matches a tab.","\\v":"Matches a vertical tab (whatever that is).","\\d":"Matches a digit character in the basic Latin alphabet.","\\D":"Matches any non-digit character in the basic Latin alphabet","^":"Matches beginning of input. If the multiline flag is set to true, also matches immediately after a line break character.","$":"Matches end of input. If the multiline flag is set to true, also matches immediately before a line break character.","\\w":"Matches any alphanumeric character from the basic Latin alphabet, including the underscore.","\\W":"Matches any character that is not a word character from the basic Latin alphabet.","\\0":"Matches a NUL character. Mysterious warning: do not follow this with another digit."};
function o(){var r=b.charAt(m),q=(r===" ")?'<i class="EMPTY">[space]</i>':(r==="\t")?'<i class="EMPTY">[tab]</i>':(r==="\n")?'<i class="EMPTY">[newline]</i>':(r==="\u00A0")?'<i class="EMPTY">[non-breaking space]</i>':REXP.render.html(r);
l.push({id:r,meaning:q,literal:true});m++;}function i(){var r=/^[*+?]\??/.exec(b.substring(m)),t=r[0],s=t.charAt(0),q="<br />The "+t+" quantifier causes this item to be ";
q+=(s==="*")?"matched 0 or more times":(s==="+")?"matched 1 or more times":"optional";if(s!=="?"){q+=(t.charAt(1)==="?")?" (non-greedy).":" (greedy).";}l[l.length-1].id+=t;
l[l.length-1].meaning+=q;l[l.length-1].literal=false;m+=t.length;}function h(){var u=/^\{(\d+),?(\d*)\}/,r=u.test(b.substring(m)),t,s,v,q;if(!r){o();return;}r=u.exec(b.substring(m));
v=r[0];t=r[1];s=r[2];q="<br />The "+v+" modifier causes this item to match ";q+=(s.length>0)?'at least <i class="NUM">'+t+'</i> occurrences and up to <i class="NUM">'+s+"</i> occurrences.":(v.indexOf(",")!==-1)?'at least <i class="NUM">'+t+"</i> occurrences.":'exactly <i class="NUM">'+t+"</i> occurrences.";
l[l.length-1].id+=v;l[l.length-1].meaning+=q;l[l.length-1].literal=false;m+=v.length;}function d(){var u,q,t,w,r,v=0,s;t=b.substring(m+1,m+3);r=(t==="?:")?"Non-capturing parentheses. This is used to group matching items without causing the group to be recalled as a submatch.":(t==="?=")?"Look ahead. <code>x(?=y)</code> matches <code>x</code> only if <code>x</code> is followed by <code>y</code>.":(t==="?!")?"Negative look ahead. <code>x(?!y)</code> matches <code>x</code> only if <code>x</code> is not followed by <code>y</code>.":"Capturing parenthesis. <code>(x)</code> matches <code>x</code> and remembers the match.";
for(q=m;q<b.length;q++){w=b.charAt(q);if(w==="("){v++;}if(w===")"){if(v>1){v--;}else{u=b.substring(m,q+1);m=q+1;break;}}if(w==="\\"){q++;}}if(q===b.length){throw new Error("Expected closing parenthesis");
}s={id:u,meaning:r};switch(t){case"?:":case"?=":case"?!":s.tokens=u.substring(3,u.length-1);break;default:s.tokens=u.substring(1,u.length-1);}s.tokens=REXP_JS.tokenize(s.tokens);
l.push(s);}function k(){var u,q,t,r,s;r=(b.charAt(m+1)==="^")?"Negated character set":"Character set";for(q=m;q<b.length;q++){t=b.charAt(q);if(t==="]"){u=b.substring(m,q+1);
m=q+1;break;}if(t==="\\"){q++;}}if(q===b.length){throw new Error("Expected closing brace");}if(u==="[\\b]"){r="Backspace";l.push({id:u,meaning:r});}else{s={id:u,meaning:r};
s.tokens=(r==="Negated character set")?REXP_JS.tokenizeCharacterClass(u.substring(2,u.length-1),true):REXP_JS.tokenizeCharacterClass(u.substring(1,u.length-1),false);
if(u==="[\\s\\S]"||u==="[\\S\\s]"){s.meaning+="<br />This character set is commonly used to match all characters, including new lines.";}l.push(s);}}function p(){var q=b.substring(m,m+3);
if(/\\c[A-Z]/.test(q)===false){m++;o();l[l.length-1].id="\\c";return;}l.push({id:q,meaning:"Control character: "+q.substring(2)});m+=3;}function g(){var u=/^\\(\d+)/.exec(b.substring(m)),y=u[0],t=u[1],r,v,w,q;
t=parseInt(t,10);v=t.toString();if(v.length>3){r=v.split("");for(q=(r.length-3);q>0;q-=3){r.splice(q,0,",");}v=r.join("");}w=t%10;v+=(t===11)?"th":(t===12)?"th":(t===13)?"th":(w===1)?"st":(w===2)?"nd":(w===3)?"rd":"th";
l.push({id:y,meaning:'A back reference to the last substring matching the <i class="NUM">'+v+"</i> parenthetical  in the regular expression (counting left parenthesis)."});
m+=y.length;}function f(){var r=/^\\x([0-9A-Fa-f]{2})/.exec(b.substring(m)),s,q;if(r===null){m++;o();l[l.length-1].id="\\x";return;}s=r[1].toUpperCase();q=(REXP_JS.charcode.hasOwnProperty(s))?'Character code <i class="HEX">'+s+'</i> (<i class="LITERAL">'+REXP.render.html(REXP_JS.charcode[s])+"</i>).":'Character code <i class="HEX">'+s+"</i>.";
l.push({id:r[0],meaning:q});m+=r[0].length;}function j(){var r=/^\\u([0-9A-Fa-f]{4})/.exec(b.substring(m)),s,q;if(r===null){m++;o();l[l.length-1].id="\\u";return;
}s=r[1].toUpperCase();q=(REXP_JS.unicode.hasOwnProperty(s))?'Unicode character <i class="HEX">'+s+'</i> (<i class="LITERAL">'+REXP.render.html(REXP_JS.unicode[s])+"</i>).":'Unicode character <i class="HEX">'+s+"</i>.";
l.push({id:r[0],meaning:q});m+=r[0].length;}function a(){var q=b.substring(m,m+2);if(c.hasOwnProperty(q)){l.push({id:q,meaning:c[q]});m+=2;return;}switch(q){case"\\c":p();
break;case"\\0":case"\\1":case"\\2":case"\\3":case"\\4":case"\\5":case"\\6":case"\\7":case"\\8":case"\\9":g();break;case"\\x":f();break;case"\\u":j();break;default:m++;
o();l[l.length-1].id=q;}}function e(){var q;while(m<b.length){q=b.charAt(m);if(c.hasOwnProperty(q)){l.push({id:q,meaning:c[q]});m++;continue;}switch(q){case"*":case"+":case"?":i();
break;case"{":h();break;case"(":d();break;case"[":k();break;case"\\":a();break;default:o();break;}}}function n(){var q,s,r=[l[0]];r[0].total=1;for(q=1,s=1;q<l.length;
q++){if(l[q].literal===true&&r[s-1].literal===true){r[s-1].id+=l[q].id;r[s-1].meaning+=l[q].meaning;r[s-1].total++;}else{r[s]=l[q];r[s].total=1;s++;}}for(q=0;q<r.length;
q++){if(r[q].literal===true){r[q].meaning='<i class="LITERAL">'+r[q].meaning+"</i>";}}return r;}this.init();e();return(l.length>1)?n():l;}};Event.onDOMReady(REXP.init,REXP,true);
